<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="S_Audio.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHcAAAB2CAYAAADyZQwvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAABG5JREFUeF7tnaGTHHUQhU9ERCAQCERERAQCgUAiEcjI/AFIBBJ1h0NGRiKRSAQS
        GRERiUAgEIiICAQC3nS9qwpdD+bY9EzPdL2v6qurvd6d7v69qlFbO1fGGGOMMcYYY4wxxhhjjDHGGGOM
        Mafn5ubmnevr62/50kwBwX6AYF/i71/8l5kAAn2CYF8vwTrcISDI+wj12W2oDncICPERgn2Rg13kW8wZ
        QYCPEeyrHOqtfJs5EwjuHkJ9msPM8u3mLCC0hwj2eQ5SyY+YM4DAPvuv23CWHzNHBkEtt+Fvcnhr8uPm
        qCCkBwj2pxzcXeQlzBFBQJ8i2N9zaHeVlzFHAsHcg18j2D/fDOv/ysuZo4BQ3keoP+agLpGXNEcAgSy3
        4d9ySJfKy5puEMZXb3sbzvLSpguE8B5C/SEHUyFbmA4QwCcI9tccSpVsY/YGh/9l9W04y1ZmL3Do7yLU
        73MQW8iWZg9w4B8j2F9yCFvJtmZrcNhfbH0bzrK12Qoc8vJNxO/ywe8hRzBbgAP+CMH+nA99LzmGqQaH
        +zmC/SMf+J5yFFMFDjW+EJ4PukOOZKpAsPGF8CPIkUwV6pC75EjzUctXyRaBqnfJkeajlq+SLQJV75Ij
        zUctXyVbBKreJUeaj1q+SrYIVL1LjjQftXyVbBGoepccaT5q+SrZIlD1LjnSfNTyVbJFoOpdcqT5qOWr
        ZItA1bvkSPNRy1fJFoGqd8mR5qOWr5ItAlXvkiPNRy1fJVsEqt4lR5qPWr5KtghUvUuONB+1fJVsEah6
        lxxpPmr5KtkiUPUuOdJ81PJVskWg6l1ypPmo5atki0DVu+RI81HLV8kWgap3yZHmo5avki0CVe+SI81H
        LV8lWwSq3iVHmo9avkq2CFS9S440H7V8lWwRqHqXHGk+avkq2SJQ9S450nzU8lWyRaDqXXKk+ajlq2SL
        QNW75EjzUctXyRaBqnfJkeajlq+SLQJV75IjzUctXyVbBKreJUeaj1q+SrYIVL1LjjQftXyVbBGoepcc
        aT5q+SrZIlD1LjnSfNTyVbJFoOpdcqT5qOWrZItA1bvkSPNRy1fJFoGqd8mR5qOWr5ItAlXvkiPNRy1f
        JVsE1zv+QtyaHGk+avkq2SLA691+23FNjmSqweFu/qusa3IUswU44E1/T3lNjmG2Aoe82S+hr8kRzNbg
        sMufYbAmW5s9wIHveptmW7MXOPSy5watyZZmT3DwJU/8WpPtTAcIoPQhUVm2MV0ghM1u02xhOkEQcZt+
        M5gKeXlzBBDI8mTrix+pmuVlzVFAKBc/DDnLS5ojgWAueox5lpczRwQBvdVtmpcxRwUhPUTAz3Nwd5GX
        MEcGQS236ac5vDX5cXMGENhjhPwqh/hv8mPmLCC0O9+m+RFzJhDccpt+lsPM8u3mjCDAJwj5dQ71Vr7N
        nBWE+AgBv8jBLvIt5swgyPvqNs2ymQAC/cdtmv82U0CoHyLgeFgk/2UmgWDjMa98aYwxxhhjjDHGGGOM
        McachKurvwFCW5hoYikk9QAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="UpdaterFlyOut.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>74</value>
  </metadata>
</root>